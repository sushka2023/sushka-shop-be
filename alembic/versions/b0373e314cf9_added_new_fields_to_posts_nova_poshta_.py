"""added new fields to posts, nova_poshta and ukr_poshta tables

Revision ID: b0373e314cf9
Revises: 7ed158240a29
Create Date: 2023-12-19 17:46:37.779269

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b0373e314cf9'
down_revision = '7ed158240a29'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('nova_poshta', sa.Column('office_number', sa.String(length=255), nullable=False))
    op.add_column('nova_poshta', sa.Column('street', sa.String(length=255), nullable=True))
    op.add_column('nova_poshta', sa.Column('house_number', sa.String(length=255), nullable=True))
    op.add_column('nova_poshta', sa.Column('apartment_number', sa.String(length=255), nullable=True))
    op.add_column('nova_poshta', sa.Column('city', sa.String(length=255), nullable=False))
    op.add_column('nova_poshta', sa.Column('region', sa.String(length=255), nullable=True))
    op.add_column('nova_poshta', sa.Column('country', sa.String(length=255), nullable=True))
    op.drop_constraint('nova_poshta_post_id_fkey', 'nova_poshta', type_='foreignkey')
    op.drop_column('nova_poshta', 'post_id')
    op.drop_column('nova_poshta', 'address')
    op.add_column('posts', sa.Column('nova_poshta_id', sa.Integer(), nullable=True))
    op.add_column('posts', sa.Column('ukr_poshta_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'posts', 'nova_poshta', ['nova_poshta_id'], ['id'])
    op.create_foreign_key(None, 'posts', 'ukr_poshta', ['ukr_poshta_id'], ['id'])
    op.add_column('ukr_poshta', sa.Column('street', sa.String(length=255), nullable=False))
    op.add_column('ukr_poshta', sa.Column('house_number', sa.String(length=255), nullable=False))
    op.add_column('ukr_poshta', sa.Column('apartment_number', sa.String(length=255), nullable=True))
    op.add_column('ukr_poshta', sa.Column('city', sa.String(length=255), nullable=False))
    op.add_column('ukr_poshta', sa.Column('region', sa.String(length=255), nullable=True))
    op.add_column('ukr_poshta', sa.Column('country', sa.String(length=255), nullable=True))
    op.add_column('ukr_poshta', sa.Column('post_code', sa.String(length=255), nullable=False))
    op.drop_constraint('ukr_poshta_post_id_fkey', 'ukr_poshta', type_='foreignkey')
    op.drop_column('ukr_poshta', 'post_id')
    op.drop_column('ukr_poshta', 'address')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ukr_poshta', sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('ukr_poshta', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('ukr_poshta_post_id_fkey', 'ukr_poshta', 'posts', ['post_id'], ['id'])
    op.drop_column('ukr_poshta', 'post_code')
    op.drop_column('ukr_poshta', 'country')
    op.drop_column('ukr_poshta', 'region')
    op.drop_column('ukr_poshta', 'city')
    op.drop_column('ukr_poshta', 'apartment_number')
    op.drop_column('ukr_poshta', 'house_number')
    op.drop_column('ukr_poshta', 'street')
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.drop_column('posts', 'ukr_poshta_id')
    op.drop_column('posts', 'nova_poshta_id')
    op.add_column('nova_poshta', sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('nova_poshta', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('nova_poshta_post_id_fkey', 'nova_poshta', 'posts', ['post_id'], ['id'])
    op.drop_column('nova_poshta', 'country')
    op.drop_column('nova_poshta', 'region')
    op.drop_column('nova_poshta', 'city')
    op.drop_column('nova_poshta', 'apartment_number')
    op.drop_column('nova_poshta', 'house_number')
    op.drop_column('nova_poshta', 'street')
    op.drop_column('nova_poshta', 'office_number')
    # ### end Alembic commands ###
